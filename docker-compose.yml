version: "3"


services:
  backend:
    build: ./
    container_name: micron_container
    working_dir: /micron
    command:
      - ./commands/start_server_${MODE}.sh
    ports:
      - ${LOCAL_PORT}:${WSGI_PORT}
    volumes:
      - ./src:/quiz/src
      - ./commands:/quiz/commands
      - static_content:/quiz/src/static
      - media_content:/quiz/src/media
    env_file:
      - .env
#    depends_on:
#      - postgres

#  postgres:
#    image: postgres:15
#    ports:
#      - 5432:5432
#    volumes:
#      - pg_data:/var/lib/postgresql/data
#    env_file:
#      - .env

#  mongodb:
#    image: mongo:3-stretch
#    container_name: mongo_container
#    ports:
#      - 27017:27017
#    command: ["--bind_ip_all", "--smallfiles"]
#    volumes:
#      - mongodb_data:/data/db
#    env_file:
#      - .env
#    restart: on-failure
#
#  mongoadmin:
#    image: mongo-express
#    restart: always
#    container_name: mongo_admin_container
#    ports:
#      - 8091:8081
#    env_file:
#      - .env
#    links:
#      - mongodb
#    depends_on:
#      - mongodb

#  pgadmin:
#    container_name: pgadmin_container
#    image: dpage/pgadmin4
#    restart: always
#    env_file:
#      - .env
#    ports:
#      - 5000:80
#    volumes:
#      - pgadmin_data:/var/lib/pgadmin
#    depends_on:
#      - postgres

  nginx:
    image: nginx:1.19
    volumes:
      - static_content:/quiz/src/static
      - media_content:/quiz/src/media
      - ./nginx:/etc/nginx/conf.d
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    depends_on:
      - backend

#  redis:
#    image: redis
#    env_file:
#      - .env
#    restart: on-failure
#    depends_on:
#      - backend
#
#  celery-flower:
#      build: ./
#      command: supervisord -c /etc/supervisor/conf.d/supervisord.conf
#      restart: always
#      volumes:
#         - ./src:/quiz/src
#      working_dir: /quiz/src
#      env_file:
#        - .env
#      ports:
#        - 5556:5555
#      depends_on:
#        - redis
#        - backend
#
#  celerybeat:
#      build: ./
#      command: celery -A config.celery_app.app worker -l ${CELERY_LOG_LEVEL} -S django
#      restart: always
#      volumes:
#        - ./src:/quiz/src
#      env_file:
#        - .env
#      working_dir: /quiz/src
#      depends_on:
#        - redis
#        - backend
#
#  redisadmin:
#    image: redislabs/redisinsight
#    container_name: redisadmin
#    restart: on-failure
#    ports:
#      - 8001:8001
#    env_file: .env
#
#  redisadminold:
#    image: rediscommander/redis-commander:latest
#    container_name: redisadminold
#    hostname: redisadminold
#    restart: always
#    ports:
#      - 8092:8081
#    env_file:
#      - .env
#
#  systemeio-supervisord-monitor:
#    container_name: my-supervisord-monitor
#    image: konekod/supervisord-monitor:latest
#    environment:
#      - SUPERVISORS_SERVERS=[{"ip":"my-php-monolith","port":9551,"name":"monolith","username":"default","password":"default"}]
#    ports:
#      - "10011:8080"
#    networks:
#      - my_app_network

#networks:
#  my_app_network:
#    driver: bridge

volumes:
  static_content: { }
  media_content: { }
#  mongodb_data: { }
#  pg_data: { }
#  pgadmin_data: { }
